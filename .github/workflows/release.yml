name: Publish Release

on:
  push:
    branches:
      # replace with your release branch, usually `main`.
      - example
  workflow_dispatch:
    inputs:
      app-slug:
        description: "The slug of your app in your CrabNebula Cloud org"
        required: true
        default: "quantum"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CN_APP_SLUG: ${{ github.event.inputs.app-slug || 'quantum' }}

jobs:
  draft:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.read_version.outputs.value }}
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Read version number
        uses: SebRollen/toml-action@v1.0.2
        id: read_version
        with:
          file: src-tauri/Cargo.toml
          field: "package.version"

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.read_version.outputs.value }}',
              sha: context.sha
            })

      - name: create draft release
        uses: crabnebula-dev/cloud-release@v0.1.0
        with:
          command: release draft ${{ env.CN_APP_SLUG }} "${{ steps.read_version.outputs.value }}" --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}

  build:
    needs: draft

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: false

      - name: install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev webkit2gtk-4.1

      - name: build tauri app
        run: |
          pnpm install
          pnpm run tauri build
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: upload assets
        uses: crabnebula-dev/cloud-release@v0.1.0
        with:
          command: release upload ${{ env.CN_APP_SLUG }} "${{ steps.read_version.outputs.value }}" --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}

  publish:
    needs: [draft, build]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: publish release
        uses: crabnebula-dev/cloud-release@v0.1.0
        with:
          command: release publish ${{ env.CN_APP_SLUG }} "${{ needs.draft.outputs.tag_name }}" --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}
